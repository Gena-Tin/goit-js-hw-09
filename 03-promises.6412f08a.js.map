{"mappings":"iiBACA,IAIuBA,EAAUC,EAJjCC,EAAAC,EAAA,SAEeC,SAASC,cAAc,UAEfL,EAeT,EAfmBC,EAehB,KAdR,IAAIK,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACaC,KAAKC,SAAW,GAEpCJ,EAAQ,CAACP,WAAUC,UAEnBO,EAAO,CAACR,WAAUC,S,GAEpBA,E,KAOHW,MAAK,SAAAC,G,IAAGb,EAAQa,EAARb,SAAUC,EAAKY,EAALZ,MACjBa,EAAAZ,GAASa,OAAOC,QAAQ,uBAAwCC,OAAfjB,EAAS,QAAYiB,OAANhB,EAAM,M,IAEvEiB,OAAM,SAAAL,G,IAAGb,EAAQa,EAARb,SAAUC,EAAKY,EAALZ,MAClBa,EAAAZ,GAASa,OAAOI,QAAQ,sBAAqCF,OAAfjB,EAAS,QAAYiB,OAANhB,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["\nimport Notiflix from 'notiflix';\n\nconst formEl = document.querySelector(\".form\");\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(()=>{\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({position, delay});      \n      } else {\n        reject({position, delay});\n      }\n    },delay);\n  });\n\n  \n}\n\ncreatePromise(2, 1500)\n  .then(({ position, delay }) => {\n    Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n    Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n  });\n\n"],"names":["position","delay","$iU1Pc","parcelRequire","document","querySelector","Promise","resolve","reject","setTimeout","Math","random","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.6412f08a.js.map"}