{"mappings":"qhBACA,IAAAA,EAAAC,EAAA,SAEeC,SAASC,cAAc,SAEtC,IAAuBC,EAAUC,GAAVD,EAeT,EAfmBC,EAehB,KAdR,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACaC,KAAKC,SAAW,GAEpCJ,EAAQ,C,SAACH,E,MAAUC,IAEnBG,EAAO,C,SAACJ,E,MAAUC,GAAO,GAE3BA,EAAM,KAOTO,MAAK,EAACR,SAAEA,EAAQC,MAAEA,MACjBQ,EAAAb,GAASc,OAAOC,QAAQ,uBAAqBX,QAAiBC,MAAU,IAEzEW,OAAM,EAACZ,SAAEA,EAAQC,MAAEA,MAClBQ,EAAAb,GAASc,OAAOG,QAAQ,sBAAoBb,QAAeC,MAAU","sources":["src/js/03-promises.js"],"sourcesContent":["\nimport Notiflix from 'notiflix';\n\nconst formEl = document.querySelector(\".form\");\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(()=>{\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({position, delay});      \n      } else {\n        reject({position, delay});\n      }\n    },delay);\n  });\n\n  \n}\n\ncreatePromise(2, 1500)\n  .then(({ position, delay }) => {\n    Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n    Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n  });\n\n"],"names":["$eWCmQ","parcelRequire","document","querySelector","position","delay","Promise","resolve","reject","setTimeout","Math","random","then","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.98d625f8.js.map"}